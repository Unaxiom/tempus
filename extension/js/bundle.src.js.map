{"version":3,"sources":["node_modules/browser-pack/_prelude.js","src/js/commons.js","src/js/main.js"],"names":[],"mappingstfile":"bundle.src.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**Stores the list of URLs */\r\nexports.tempusObjectID = \"tempusArray\";\r\nexports.tempusRefresherID = \"tempusRefresher\";\r\nexports.refreshDelayInMins = 1 / 60;\r\nexports.refreshAlarm = \"Alarm\";\r\n/**Returns the tempus object */\r\nfunction fetchTempusObject() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var storageObject;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, browser.storage.local.get()];\r\n                case 1:\r\n                    storageObject = _a.sent();\r\n                    if (!!storageObject[exports.tempusObjectID]) return [3 /*break*/, 3];\r\n                    storageObject[exports.tempusObjectID] = {\r\n                        id: exports.tempusObjectID,\r\n                        tempusArray: []\r\n                    };\r\n                    // Write the object to the storage\r\n                    return [4 /*yield*/, browser.storage.local.set(storageObject)];\r\n                case 2:\r\n                    // Write the object to the storage\r\n                    _a.sent();\r\n                    _a.label = 3;\r\n                case 3: return [4 /*yield*/, browser.storage.local.get()];\r\n                case 4:\r\n                    storageObject = _a.sent();\r\n                    return [2 /*return*/, storageObject[exports.tempusObjectID]];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.fetchTempusObject = fetchTempusObject;\r\n/**Returns the tempus refresher object */\r\nfunction fetchTempusRefresher() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var storageObject;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, browser.storage.local.get()];\r\n                case 1:\r\n                    storageObject = _a.sent();\r\n                    if (!!storageObject[exports.tempusRefresherID]) return [3 /*break*/, 3];\r\n                    storageObject[exports.tempusRefresherID] = {\r\n                        id: exports.tempusRefresherID,\r\n                        refreshed_at: 0\r\n                    };\r\n                    // Write the object to the storage\r\n                    return [4 /*yield*/, browser.storage.local.set(storageObject)];\r\n                case 2:\r\n                    // Write the object to the storage\r\n                    _a.sent();\r\n                    _a.label = 3;\r\n                case 3: return [4 /*yield*/, browser.storage.local.get()];\r\n                case 4:\r\n                    storageObject = _a.sent();\r\n                    return [2 /*return*/, storageObject[exports.tempusRefresherID]];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.fetchTempusRefresher = fetchTempusRefresher;\r\n/**Checks if there are any unclosed tabs and closes them */\r\nfunction closePreviouslyUnclosedTabs() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var tempusObject, tempusRefresher, currentTimestamp, timeDelay;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, fetchTempusObject()];\r\n                case 1:\r\n                    tempusObject = _a.sent();\r\n                    return [4 /*yield*/, fetchTempusRefresher()];\r\n                case 2:\r\n                    tempusRefresher = _a.sent();\r\n                    currentTimestamp = new Date().getTime();\r\n                    if (tempusRefresher.refreshed_at <= 0) {\r\n                        // This is the first time this is running\r\n                        return [2 /*return*/];\r\n                    }\r\n                    timeDelay = currentTimestamp - tempusRefresher.refreshed_at;\r\n                    /* Iterate over all the available tempus objects and set their active to false,\r\n                    /* and increase their duration by refreshDelayInMins * 6000\r\n                    */\r\n                    tempusObject.tempusArray.forEach(function (tempusStruct) {\r\n                        if (tempusStruct.active) {\r\n                            tempusStruct.active = false;\r\n                            if (timeDelay > exports.refreshDelayInMins * 60 * 1000) {\r\n                                // If time delay is greater, then the max increment can be the refresh delay\r\n                                tempusStruct.lapsed += exports.refreshDelayInMins * 60 * 1000;\r\n                            }\r\n                            else {\r\n                                // If time delay is lower, then set it to time delay\r\n                                tempusStruct.lapsed += timeDelay;\r\n                            }\r\n                        }\r\n                    });\r\n                    return [4 /*yield*/, storeTempusObject(tempusObject)];\r\n                case 3:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, storeTempusRefresher(tempusRefresher)];\r\n                case 4:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.closePreviouslyUnclosedTabs = closePreviouslyUnclosedTabs;\r\n/**Returns domain from a passed URL */\r\nfunction returnDomainFromURL(url) {\r\n    var domain = '';\r\n    if (!url) {\r\n        return domain;\r\n    }\r\n    if (url.startsWith(\"http\")) {\r\n        var temp = url.split(\"//\");\r\n        domain = temp[0] + \"//\" + temp[1].split(\"/\")[0];\r\n    }\r\n    else {\r\n        domain = url;\r\n    }\r\n    return domain;\r\n}\r\nexports.returnDomainFromURL = returnDomainFromURL;\r\n/**Stores the tempus object in the storage */\r\nfunction storeTempusObject(obj) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var localObj;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    localObj = {};\r\n                    localObj[exports.tempusObjectID] = obj;\r\n                    return [4 /*yield*/, browser.storage.local.set(localObj)];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.storeTempusObject = storeTempusObject;\r\n/**Stores the tempus refresher in the storage */\r\nfunction storeTempusRefresher(obj) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var localObj;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0:\r\n                    localObj = {};\r\n                    localObj[exports.tempusRefresherID] = obj;\r\n                    return [4 /*yield*/, browser.storage.local.set(localObj)];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.storeTempusRefresher = storeTempusRefresher;\r\n/**Updates all the open tabs */\r\nfunction updateOpenTabs() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var tabs, tempusObject, tempusRefresher, tempusArrayDomains, j, obj;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, browser.tabs.query({})];\r\n                case 1:\r\n                    tabs = _a.sent();\r\n                    return [4 /*yield*/, fetchTempusObject()];\r\n                case 2:\r\n                    tempusObject = _a.sent();\r\n                    return [4 /*yield*/, fetchTempusRefresher()];\r\n                case 3:\r\n                    tempusRefresher = _a.sent();\r\n                    tempusArrayDomains = [];\r\n                    for (j = 0; j < tempusObject.tempusArray.length; j++) {\r\n                        obj = tempusObject.tempusArray[j];\r\n                        tempusArrayDomains.push(obj.domain);\r\n                    }\r\n                    // If any of the tabsDomains do not have an entry in tempusArrayDomains, then add it to the list\r\n                    tabs.forEach(function (tab) {\r\n                        if (tab.url) {\r\n                            var domain = returnDomainFromURL(tab.url);\r\n                            var index = tempusArrayDomains.indexOf(domain);\r\n                            if (index == -1) {\r\n                                tempusObject.tempusArray.push({\r\n                                    active: tab.active,\r\n                                    domain: domain,\r\n                                    activatedAt: new Date().getTime(),\r\n                                    lapsed: 0\r\n                                });\r\n                            }\r\n                            else {\r\n                                // Set the tab to active\r\n                                if (tab.active) {\r\n                                    var el = tempusObject.tempusArray[index];\r\n                                    el.active = tab.active;\r\n                                    tempusObject.tempusArray.splice(index, 1, el);\r\n                                }\r\n                            }\r\n                        }\r\n                    });\r\n                    return [4 /*yield*/, storeTempusObject(tempusObject)];\r\n                case 4:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.updateOpenTabs = updateOpenTabs;\r\n// Alarms\r\n/**Creates the alarm */\r\nfunction createAlarm() {\r\n    browser.alarms.create(exports.refreshAlarm, { delayInMinutes: exports.refreshDelayInMins });\r\n    browser.alarms.onAlarm.addListener(refreshTimestamp);\r\n}\r\n/**Resets the alarms */\r\nfunction resetAlarm() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, browser.alarms.clear(exports.refreshAlarm)];\r\n                case 1:\r\n                    _a.sent();\r\n                    createAlarm();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**Event handler that handles the alarm fire */\r\nfunction refreshTimestamp(alarm) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var tempusRefresher, tempusObject;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, fetchTempusRefresher()];\r\n                case 1:\r\n                    tempusRefresher = _a.sent();\r\n                    tempusRefresher.refreshed_at = new Date().getTime();\r\n                    return [4 /*yield*/, storeTempusRefresher(tempusRefresher)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, fetchTempusObject()];\r\n                case 3:\r\n                    tempusObject = _a.sent();\r\n                    tempusObject.tempusArray.forEach(function (tempusStruct) {\r\n                        if (tempusStruct.active) {\r\n                            tempusStruct.lapsed += tempusRefresher.refreshed_at - tempusStruct.activatedAt;\r\n                            tempusStruct.activatedAt = tempusRefresher.refreshed_at;\r\n                        }\r\n                    });\r\n                    return [4 /*yield*/, storeTempusObject(tempusObject)];\r\n                case 4:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, resetAlarm()];\r\n                case 5:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**Handle the first run */\r\nfunction onFirstLoad() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: \r\n                // await __deleteStorage();\r\n                return [4 /*yield*/, closePreviouslyUnclosedTabs()];\r\n                case 1:\r\n                    // await __deleteStorage();\r\n                    _a.sent();\r\n                    return [4 /*yield*/, updateOpenTabs()];\r\n                case 2:\r\n                    _a.sent();\r\n                    // createAlarm();\r\n                    return [4 /*yield*/, resetAlarm()];\r\n                case 3:\r\n                    // createAlarm();\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.onFirstLoad = onFirstLoad;\r\n/**Deletes the storage */\r\nfunction __deleteStorage() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, browser.storage.local.clear()];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\nexports.__deleteStorage = __deleteStorage;\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = y[op[0] & 2 ? \"return\" : op[0] ? \"throw\" : \"next\"]) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [0, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar commons = require(\"./commons\");\r\n/**Appends to the list if the object is not already present in the list */\r\nfunction appendToTempusObjectArray(object) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var tempusObject, found, i, temp;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, commons.fetchTempusObject()];\r\n                case 1:\r\n                    tempusObject = _a.sent();\r\n                    found = false;\r\n                    for (i = 0; i < tempusObject.tempusArray.length; i++) {\r\n                        temp = tempusObject.tempusArray[i];\r\n                        if (temp.domain === object.domain) {\r\n                            found = true;\r\n                            // Interchange the values\r\n                            if (temp.active) {\r\n                                // Don't change anything, since this is already being considered\r\n                            }\r\n                            else if (object.active) {\r\n                                temp.active = object.active;\r\n                                temp.activatedAt = object.activatedAt;\r\n                                if (object.lapsed > 0) {\r\n                                    temp.lapsed = object.lapsed | 0;\r\n                                }\r\n                                tempusObject.tempusArray[i] = temp;\r\n                            }\r\n                            break;\r\n                        }\r\n                    }\r\n                    if (!found) {\r\n                        tempusObject.tempusArray.push(object);\r\n                    }\r\n                    return [4 /*yield*/, commons.storeTempusObject(tempusObject)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**Sets the active */\r\nfunction toggleTabsActiveState(tempusTabs, active) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var object, allTabsDomains, activeDomains, i, availableTab;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, commons.fetchTempusObject()];\r\n                case 1:\r\n                    object = _a.sent();\r\n                    allTabsDomains = object.tempusArray.map(function (temp) {\r\n                        return temp.domain;\r\n                    });\r\n                    activeDomains = tempusTabs.map(function (temp) {\r\n                        return temp.domain;\r\n                    });\r\n                    for (i = 0; i < allTabsDomains.length; i++) {\r\n                        availableTab = allTabsDomains[i];\r\n                        if (activeDomains.indexOf(availableTab) > -1) {\r\n                            if (active) {\r\n                                object.tempusArray[i].active = true;\r\n                                object.tempusArray[i].activatedAt = new Date().getTime();\r\n                            }\r\n                            else {\r\n                                object.tempusArray[i].active = false;\r\n                                object.tempusArray[i].activatedAt = 0;\r\n                            }\r\n                        }\r\n                        else {\r\n                            object.tempusArray[i].active = false;\r\n                        }\r\n                    }\r\n                    return [4 /*yield*/, commons.storeTempusObject(object)];\r\n                case 2:\r\n                    _a.sent();\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**Handles a tab updation event of the browser */\r\nfunction handleTabUpdation(tabId, changeInfo, tab) {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var newTab;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, commons.closePreviouslyUnclosedTabs()];\r\n                case 1:\r\n                    _a.sent();\r\n                    return [4 /*yield*/, commons.updateOpenTabs()];\r\n                case 2:\r\n                    _a.sent();\r\n                    if (changeInfo.status === \"complete\") {\r\n                        newTab = {\r\n                            domain: commons.returnDomainFromURL(tab.url),\r\n                            active: tab.active,\r\n                            lapsed: 0\r\n                        };\r\n                        if (newTab.active) {\r\n                            newTab.activatedAt = new Date().getTime();\r\n                        }\r\n                        appendToTempusObjectArray(newTab);\r\n                    }\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n/**Function that fetches all the available tabs and processes them */\r\nfunction recountAllActiveTabs() {\r\n    return __awaiter(this, void 0, void 0, function () {\r\n        var temp, allTabs;\r\n        return __generator(this, function (_a) {\r\n            switch (_a.label) {\r\n                case 0: return [4 /*yield*/, browser.tabs.query({\r\n                        active: true\r\n                    })];\r\n                case 1:\r\n                    temp = _a.sent();\r\n                    allTabs = temp.map(function (tab) {\r\n                        var localTab = {\r\n                            domain: commons.returnDomainFromURL(tab.url),\r\n                            active: tab.active,\r\n                            lapsed: 0,\r\n                            activatedAt: 0\r\n                        };\r\n                        if (localTab.active) {\r\n                            localTab.activatedAt = new Date().getTime();\r\n                        }\r\n                        return localTab;\r\n                    });\r\n                    toggleTabsActiveState(allTabs, true);\r\n                    return [2 /*return*/];\r\n            }\r\n        });\r\n    });\r\n}\r\n// Create the event handler for onActivated\r\nbrowser.tabs.onActivated.addListener(recountAllActiveTabs);\r\n// Create the event handler for onRemoved\r\nbrowser.tabs.onRemoved.addListener(recountAllActiveTabs);\r\n// Create the event handler for onUpdated\r\nbrowser.tabs.onUpdated.addListener(handleTabUpdation);\r\ncommons.onFirstLoad();\r\n"],"preExistingComment":"//# sourceMappingURL=data:application/json;charset=utf-8;base64,"}